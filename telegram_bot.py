
import telebot
import os
from convert import convert_video_to_audio
from whisper_utils import transcribe_audio
from evaluate import evaluate_script

# –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
TOKEN = "7851015115:AAHj83iRYLsUrGmk8QC36SrrqPik4NOlOpo"
bot = telebot.TeleBot(TOKEN)

@bot.message_handler(content_types=['video', 'document', 'voice', 'audio'])
def handle_media(message):
    file_id = message.video.file_id if message.video else message.document.file_id if message.document else message.voice.file_id if message.voice else message.audio.file_id
    file_info = bot.get_file(file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    input_ext = file_info.file_path.split('.')[-1]
    base_filename = f"media_{message.chat.id}"
    video_path = f"{base_filename}.{input_ext}"
    audio_path = f"{base_filename}.wav"

    with open(video_path, 'wb') as f:
        f.write(downloaded_file)

    try:
        convert_video_to_audio(video_path, audio_path)
        transcript = transcribe_audio(audio_path)
        score, total = evaluate_script(transcript)

        result = f"üßæ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\n{transcript}\n\nüìä –û—Ü–µ–Ω–∫–∞ –ø–æ 5 —Å—Ç–æ–ª–ø–∞–º:\n"
        for k, v in score.items():
            result += f"{k}: {'‚úÖ' if v else '‚ùå'}\n"
        result += f"\n‚≠ê –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: {total}/5"

        bot.send_message(message.chat.id, result)
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {str(e)}")

bot.polling()
