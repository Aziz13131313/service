# evaluate.py
import re
from typing import Dict

# ---------- утилиты ----------
def norm(text: str) -> str:
    t = " ".join((text or "").lower().split())
    # лёгкая «псевдо-латинизация» казахских букв, чтобы сгладить варианты
    repl = {
        "ғ": "г", "қ": "к", "ң": "н", "ү": "у", "ұ": "у", "ө": "о", "һ": "х",
        "ә": "а", "і": "и", "җ": "ж", "й": "и"
    }
    for a, b in repl.items():
        t = t.replace(a, b)
    # апострофы/тире → пробел
    t = t.replace("’", " ").replace("'", " ").replace("–", " ").replace("—", " ")
    return t

def has_any(t: str, keys) -> bool:
    return any(k in t for k in keys)

def regex_any(t: str, patterns) -> bool:
    return any(re.search(p, t) for p in patterns)

# ---------- словари фраз ----------

# Приветствие
HELLO = [
    "ассалаумагалейкум", "ассаламу алейкум", "ассалам алейкум",
    "саламатсыз ба", "саламатсызба", "салеметсиз бе", "салеметсизбе",
    "салем", "сален", "салам", "салеметсиздер", "салеметсыздар",
    "здравствуйте", "добрый день", "добрый вечер", "приветствую"
]

# Самопредставление (в т.ч. частые варианты ASR)
SELF_INTRO = [
    "менин атым", "менинг атым", "мени деп атайды",
    "менин есим", "менин есiм", "менин есiмiм", "менин есимим",
    "мен есiм", "мен есим", "мен есiмiм",
    "мен консультант", "мен менеджер", "мен азиз", "менин есим азиз"
]
SELF_INTRO_RE = [
    r"\bменин?\b.*\b(есим|есiм|атым)\b",      # «менің/менин … есім/атым …»
    r"\bмени\b.*\b(деп атайды|деп атайды)\b"
]

# 1) Опрос: были ранее?
SURVEY_WAS_BEFORE = [
    "бурын болгансыз ба", "бурын келдинiз бе", "бурын келдиниз бе",
    "раньше были", "бывали ранее", "вы раньше были", "у нас раньше были"
]

# 2) Опрос: залог или скупка?
# Включаем «завод» как грязный синоним «залог» (частая ошибка ASR)
SURVEY_PAWN_OR_BUY = [
    "залог", "залог па", "кепил", "кепил ме", "кепiл", "кепiлге",
    "скупка", "выкуп", "выкупка",
    "завод",  # ← ловим как ошибку распознавания «залог»
    "залог или скупка", "залог или выкуп", "залог либо скупка"
]

# 3) Опрос: уточнил имя клиента (хватаем оба — «атыңыз/атаңыз»)
SURVEY_ASK_NAME = [
    "атыныз калай", "атыныз ким", "атынызды калай атаймын",
    "как к вам обращаться", "как вас зовут",
    "атыңыз қалай", "атыңыз ким", "атыныз ким",
    "атаңыз ким"  # если ASR спутал «атыңыз» ↔ «атаңыз»
]
SURVEY_ASK_NAME_RE = [
    r"аты(ныз|ңыз)\s*ким", r"аты(ныз|ңыз)\s*калай",
    r"как к вам обращаться", r"как вас зовут"
]

# Прощание (50)
FAREWELL = [
    "сау болыныз", "сауболыныз", "сау болыныздар", "сау бол",
    "всего хорошего", "всего доброго", "до свидания", "рахмет"
]

# Отработка на возврат / приглашение (ещё 50)
RETURN_INVITE = [
    "ждем вас", "ждем на выкупе", "приходите", "приходите на выкуп",
    "выкуп", "выкупка",
    # казахские варианты «ждём / будем ждать»
    "кутемиз", "кутем", "кутип турамыз", "кутип турмыз", "кутип отырамыз",
    "кyтемiз", "кyтип турамыз", "кутемиз выкупка",
    "кyтемiз выкупка"
]
RETURN_INVITE_RE = [
    r"к(у|y)т(е|e)м(из)?",                # күтеміз/кутемиз/кутем
    r"к(у|y)тип\s+тур(ам|мыз)",           # күтіп тұрамыз/турмыз
    r"к(у|y)тип\s+отырамыз",              # күтіп отырамыз
    r"ждем( вас| на выкупе)?"             # русские формы
]

# Презентация договора: проценты/срок/сумма
CONTRACT_HINTS = [
    "%", "процент", "пайыз", "пайызбен",
    "в день", "в месяц", "дней", "день", "кун", "30 дней", "30 кун",
    "тенге", "сумма", "ставка", "по договору", "бойынша"
]
CONTRACT_RE = [
    r"\b\d+\s*%\b", r"\b\d+[.,]\d+\s*%\b",
    r"\b\d+\s*(дней|день|кун)\b",
    r"\b\d+\s*(тенге|тг)\b"
]

# ---------- основная функция ----------
def evaluate_service(transcript: str) -> Dict[str, int]:
    t = norm(transcript)

    # Приветствие / представление
    greet = 50 if has_any(t, HELLO) else 0
    intro = 0
    if has_any(t, SELF_INTRO) or regex_any(t, SELF_INTRO_RE):
        intro = 50
    greet_total = greet + intro

    # Опрос 35/30/35
    s1 = 35 if has_any(t, SURVEY_WAS_BEFORE) else 0
    s2 = 30 if (has_any(t, SURVEY_PAWN_OR_BUY)) else 0
    s3 = 35 if (has_any(t, SURVEY_ASK_NAME) or regex_any(t, SURVEY_ASK_NAME_RE)) else 0
    survey_total = s1 + s2 + s3  # строку «0/0/0» оставим как раньше
    survey_str = f"{s1}/{s2}/{s3}"

    # Презентация договора
    contract = 100 if (has_any(t, CONTRACT_HINTS) or regex_any(t, CONTRACT_RE)) else 0

    # Прощание + приглашение
    bye = 50 if has_any(t, FAREWELL) else 0
    invite = 50 if (has_any(t, RETURN_INVITE) or regex_any(t, RETURN_INVITE_RE)) else 0
    farewell_total = bye + invite

    return {
        "Приветствие и представление": greet_total,
        "Приветствие": greet,
        "Представление": intro,
        "Опрос": survey_str,
        "Презентация договора": contract,
        "Прощание и отработка на возврат": farewell_total,
    }


