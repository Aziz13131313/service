import re

def evaluate_service(transcript: str) -> dict:
    """Локальная оценка сервиса без GPT: ищем ключевые фразы и ставим баллы."""

    # Приводим текст к нижнему регистру для удобства поиска
    text = transcript.lower()

    # --- Приветствие и представление ---
    greeting_score = 0
    # Приветствие
    if re.search(r'\b(здравствуй|здравствуйте|привет|добрый день|добрый вечер|доброе утро|салам)\b', text):
        greeting_score += 50
    # Представление
    if re.search(r'(меня зовут|это [^\\n]+|говорит [^\\n]+)', text):
        greeting_score += 50

    # --- Опрос: был ли ранее, имя, залог/скупка ---
    was_here = 35 if re.search(r'\b(бывал|бывали|были у нас|первый раз|впервые)\b', text) else 0
    ask_name = 30 if re.search(r'(как вас зовут|как могу к вам обращаться|ваше имя)', text) else 0
    intent = 35 if re.search(r'\b(залог|скупка|продать|купить|выкуп)\b', text) else 0

    # --- Презентация договора ---
    # Считаем, что презентация была, если упомянули проценты, условия или сроки займа
    presentation = 100 if re.search(r'(процент|услови|срок|договор)', text) else 0

    # --- Прощание и отработка на возврат ---
    farewell_score = 0
    if re.search(r'(до свидания|всего доброго|до встречи|всего хорошего|пока)', text):
        farewell_score += 50
    if re.search(r'(жд[её]м вас|жд[её]м на выкупе|приходите ещё)', text):
        farewell_score += 50

    return {
        "Приветствие и представление": greeting_score,
        "Опрос": f"{was_here}/{ask_name}/{intent}",
        "Презентация договора": presentation,
        "Прощание и отработка на возврат": farewell_score
    }

            "Презентация договора": 0,
            "Прощание и отработка на возврат": 0,
            "Ошибка": f"{e}\\nGPT ответил:\\n{content}"
        }
