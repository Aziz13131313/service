# evaluate.py
import re
from typing import Dict, Tuple

# ---------- утилиты ----------

def norm(text: str) -> str:
    # Приводим к нижнему, убираем лишние пробелы
    t = " ".join((text or "").lower().split())
    # Иногда ASR путает апострофы/диакритики – нормализуем популярные варианты
    repl = {
        "ғ": "г", "қ": "к", "ң": "н", "ү": "у", "ұ": "у", "ө": "о", "һ": "х",
        "ә": "а", "і": "и", "җ": "ж", "ңғ": "нг"
    }
    for a, b in repl.items():
        t = t.replace(a, b)
    return t

def has_any(t: str, keys) -> bool:
    return any(k in t for k in keys)

def regex_any(t: str, patterns) -> bool:
    return any(re.search(p, t) for p in patterns)

# ---------- словари фраз ----------

# Приветствие
HELLO = [
    "саламатсыз ба", "саламатсызба", "салеметсиз бе", "салеметсизбе",
    "салем", "сален", "салам", "салеметсиздер ме", "салеметсыздар",
    "сәлеметсіз бе", "сәлем", "ассалаумагалейкум", "ассаламу алейкум",
    "здравствуйте", "добрый день", "добрый вечер", "приветствую"
]

# Самопредставление
SELF_INTRO = [
    "менин атым", "менин атым", "менин есимим", "менин есiмiм",
    "менин атым", "мен есiм", "аты-жоним", "аты-жөним",
    "мени ... деп атайды", "мени деп атайды", "мен консультант", "мен менеджер",
    "мен ... атындагы", "мен ... атам", "менин есiмi"
]

# 1) Опрос: был ли раньше
SURVEY_WAS_BEFORE = [
    "бурын болгансыз ба", "бурын болгансызба", "бурын келдинiз бе", "бурын келдинiзбе",
    "бурын болган ба", "бурын болдыныз ба", "бурын болдынызба",
    "раньше были", "бывали ранее", "вы раньше были", "у нас раньше были"
]

# 2) Опрос: залог или скупка?
SURVEY_PAWN_OR_BUY = [
    "залог па", "кепил ме", "кепилге", "кепiлге", "кепилбойынша", "кепiл бойынша",
    "скупка", "выкуп", "выпкуп", "салбонс", "кунына выкуп", "скупко", "купке",
    "залог или скупка", "залог или выкуп", "залог либо скупка"
]

# 3) Опрос: уточнил имя клиента
SURVEY_ASK_NAME = [
    "атыныз калай", "атыныз калай", "атынызды калай атаймын", "кагай атап",
    "сизге калай жугiнейiн", "кака обращаться", "как к вам обращаться",
    "вас как звать", "вас как можно называть", "как вас зовут"
]

# Прощание (50)
FAREWELL = [
    "сау болыныз", "сауболыныз", "сау болыныздар", "саубол",
    "кечириниз", "рахмет", "всего хорошего", "всего доброго", "до свидания",
    "жаксы кун", "кутты кун", "сау бол", "сау болыныз", "кеш жарык"
]

# Отработка на возврат / приглашение на выкуп (ещё 50)
RETURN_INVITE = [
    "выкуп", "выкупка", "ждем вас", "кутемиз", "келиниз", "келип кетиниз",
    "келип кетиниздер", "келесиз", "приходите", "ждем на выкупе",
    "скоро келиниз", "кутемиз выкупка", "выкупкага"
]

# Презентация договора: процент/срок/сумма
CONTRACT_HINTS = [
    "%", "процент", "пайыз", "пайызбен", "кун", "к√н", "дней", "день", "30 кун", "30 дней",
    "теnге", "тенге", "сомма", "сумма", "айына", "в день", "в сутки", "в месяц",
    "0.4", "0,4", "2%", "0.2%", "ставка", "процентная ставка", "договора бойынша", "по договору"
]

# ---------- основная функция ----------

def evaluate_service(transcript: str) -> Dict[str, int]:
    """
    Возвращает словарь с баллами.
    Ключи:
      - 'Приветствие и представление'
      - 'Приветствие'
      - 'Представление'
      - 'Опрос'
      - 'Презентация договора'
      - 'Прощание и отработка на возврат'
    """
    t = norm(transcript)

    # Приветствие/представление
    greet = 50 if has_any(t, HELLO) else 0
    intro = 50 if has_any(t, SELF_INTRO) or regex_any(t, [r"\b(мен|мени)\b.*\b(атым|есим)\b"]) else 0
    greet_total = greet + intro

    # Опрос 35/30/35
    s1 = 35 if has_any(t, SURVEY_WAS_BEFORE) else 0
    s2 = 30 if has_any(t, SURVEY_PAWN_OR_BUY) else 0
    # имя — чуть шире: ловим «атыныз», «атынызды», «как к вам обращаться», «как вас зовут»
    s3 = 35 if has_any(t, SURVEY_ASK_NAME) or regex_any(t, [r"аты(ныз|нызды)\s", r"как к вам обращаться", r"как вас зовут"]) else 0
    survey_total = s1 + s2 + s3

    # Презентация договора
    contract = 100 if has_any(t, CONTRACT_HINTS) or regex_any(t, [r"\b\d+\s*%\b", r"\b\d+\s*д(ней|ень)\b", r"\b\d+\s*кун\b"]) else 0

    # Прощание и возврат
    bye = 50 if has_any(t, FAREWELL) else 0
    invite = 50 if has_any(t, RETURN_INVITE) else 0
    farewell_total = bye + invite

    return {
        "Приветствие и представление": greet_total,
        "Приветствие": greet,
        "Представление": intro,
        "Опрос": f"{s1}/{s2}/{s3}",
        "Презентация договора": contract,
        "Прощание и отработка на возврат": farewell_total,
    }


