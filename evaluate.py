import openai
import os
import json

client = openai.OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

def evaluate_service(transcript: str) -> dict:
    prompt = f"""
Ты — профессиональный аудитор сервиса. Клиент отправил текстовую расшифровку разговора сотрудника с клиентом.
Твоя задача — оценить качество сервиса по следующим шагам. Оценивай по смыслу, а не только по точным фразам. Возможны разные языки: русский, казахский, английский и т.д.

Критерии:
1. Приветствие и представление: сотрудник поздоровался и при необходимости представился. 0 баллов — ничего не сказал; 50 баллов — только приветствие; 100 баллов — поздоровался и представился.
2. Опрос: выяснил, (a) бывал ли клиент ранее (35 баллов), (b) как к нему обращаться / уточнил имя (30 баллов), (c) интересует залог или скупка (35 баллов). Выведи результат как строку вида "35/30/35", где указаны баллы за каждое подусловие (используй 0, если условие не выполнено).
3. Презентация договора: сотрудник рассказал про проценты, условия и сроки займа. 100 баллов, если всё объяснил; 0 баллов, если нет.
4. Прощание и отработка на возврат: сотрудник вежливо попрощался и пригласил вернуться. 0 баллов — ничего; 50 баллов — только прощание; 100 баллов — прощание + приглашение вернуться.

Транскрипт:
\"\"\"{transcript}\"\"\"

Проанализируй и выведи результат строго в JSON-формате, например:
{{  # двойные фигурные скобки экранируют JSON в f-строке
    "Приветствие и представление": 100,
    "Опрос": "35/30/35",
    "Презентация договора": 100,
    "Прощание и отработка на возврат": 50
}}
Только JSON, без пояснений.
"""
    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": prompt}],
        temperature=0
    )

    content = response.choices[0].message.content.strip()

    # убираем префикс «JSON» или кодовый блок, если GPT их добавил
    if content.lower().startswith("json"):
        content = content[len("json"):].strip()
    if content.startswith("```"):
        parts = content.split("```")
        content = parts[1].strip() if len(parts) > 1 else content

    try:
        return json.loads(content)
    except Exception as e:
        return {
            "Приветствие и представление": 0,
            "Опрос": "0/0/0",
            "Презентация договора": 0,
            "Прощание и отработка на возврат": 0,
            "Ошибка": f"{e}\\nGPT ответил:\\n{content}"
        }
